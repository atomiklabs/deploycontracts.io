import { StepState } from '@/components/steps'

type StepIconProps = React.SVGProps<SVGSVGElement>

export function Step1Icon(props: StepIconProps) {
  return (
    <svg viewBox='0 0 42 46' fill='none' xmlns='http://www.w3.org/2000/svg' {...props}>
      <linearGradient xmlns='http://www.w3.org/2000/svg' id='current' x1='0' y1='10%' x2='1' y2='100%'>
        <stop offset='5.15%' stopColor='#671bc9' />
        <stop offset='108.88%' stopColor='#fd0f9e' />
      </linearGradient>
      <linearGradient xmlns='http://www.w3.org/2000/svg' id='visited' x1='1' y1='50%' x2='0' y2='130%'>
        <stop offset='-52.99%' stopColor='#671bc9' />
        <stop offset='97.26%' stopColor='#fd0f9e' />
      </linearGradient>
      <path
        clipRule='evenodd'
        d='M17.7846 2.80385L5 10.185C3.14359 11.2568 2 13.2376 2 15.3812V30.1436C2 32.2872 3.14359 34.2679 5 35.3397L17.7846 42.7209C19.641 43.7927 21.9282 43.7927 23.7846 42.7209L36.5692 35.3397C38.4256 34.2679 39.5692 32.2872 39.5692 30.1436V15.3812C39.5692 13.2376 38.4256 11.2568 36.5692 10.185L23.7846 2.80385C21.9282 1.73205 19.641 1.73205 17.7846 2.80385ZM24.7846 1.0718C22.3094 -0.357267 19.2598 -0.357267 16.7846 1.0718L4 8.45299C1.52479 9.88206 0 12.5231 0 15.3812V30.1436C0 33.0017 1.52479 35.6427 4 37.0718L16.7846 44.453C19.2598 45.8821 22.3094 45.8821 24.7846 44.453L37.5692 37.0718C40.0444 35.6427 41.5692 33.0017 41.5692 30.1436V15.3812C41.5692 12.5231 40.0444 9.88206 37.5692 8.45299L24.7846 1.0718ZM16.8754 12.5747C17.0334 12.5093 17.2078 12.4944 17.3746 12.5321L20.3563 16.502C20.3229 16.5043 20.2894 16.5068 20.2559 16.5097C19.0997 16.6078 17.9937 17.0259 17.0616 17.7172C16.1296 18.4084 15.4084 19.3454 14.9788 20.4234C14.5492 21.5013 14.4281 22.6776 14.6292 23.8204C14.8303 24.9632 15.3456 26.0275 16.1174 26.894C16.7198 27.5704 17.4599 28.1055 18.2846 28.4655V30.2624C18.2846 30.8147 18.7323 31.2624 19.2846 31.2624H22.2846C22.8369 31.2624 23.2846 30.8147 23.2846 30.2624V28.4669C24.2735 28.0373 25.1384 27.3566 25.79 26.4867C26.1574 25.9962 26.4481 25.4575 26.6558 24.8892L27.7891 26.398C27.3846 26.5093 27.0785 26.8695 27.0559 27.3114C27.0277 27.8629 27.452 28.3329 28.0036 28.3611L29.3138 28.428L27.7891 26.398L27.7896 26.3979L29.3146 28.4281C29.8978 28.4582 30.476 28.307 30.9698 27.9953C31.4639 27.6834 31.8492 27.2262 32.0729 26.6865C32.2965 26.1467 32.3475 25.551 32.2189 24.9811C32.0902 24.4112 31.7883 23.8952 31.3545 23.5039L31.3544 23.5038L30.3832 22.6276L30.3831 22.6275C30.2971 22.5497 30.2283 22.4547 30.1813 22.3487C30.1342 22.2427 30.1098 22.1279 30.1098 22.0119C30.1098 21.8959 30.1342 21.7811 30.1813 21.6751C30.2283 21.5692 30.2969 21.4744 30.3827 21.3966L30.3832 21.3962L31.3545 20.5199L31.3555 20.5189C31.7886 20.1271 32.0897 19.6109 32.2175 19.0411C32.3454 18.4713 32.2937 17.8758 32.0696 17.3366C31.8455 16.7973 31.4599 16.3407 30.9659 16.0293C30.4722 15.7182 29.8943 15.5674 29.3115 15.5977L29.3103 15.5978L28.0042 15.6637L28.0035 15.6637C27.8877 15.6696 27.7719 15.6512 27.6637 15.6095C27.5555 15.5679 27.4573 15.504 27.3753 15.422C27.2934 15.3399 27.2296 15.2416 27.1881 15.1334C27.1465 15.0251 27.1282 14.9094 27.1342 14.7936L27.1343 14.7925L27.2013 13.4846L27.2013 13.4845C27.2312 12.9012 27.0798 12.323 26.7678 11.8292C26.4558 11.3354 25.9986 10.9504 25.4589 10.7269C24.9193 10.5034 24.3237 10.4526 23.7539 10.5812C23.1844 10.7099 22.6687 11.0116 22.2775 11.4451L22.2775 11.4451L22.277 11.4456L21.3995 12.4171L21.3993 12.4174C21.3216 12.5034 21.2268 12.5721 21.1209 12.6192C21.0151 12.6663 20.9005 12.6906 20.7846 12.6906C20.6687 12.6906 20.5542 12.6663 20.4483 12.6192C20.3424 12.5721 20.2476 12.5034 20.1699 12.4174L20.1697 12.4171L19.2922 11.4456L19.2917 11.4451L19.2917 11.4451C18.9005 11.0116 18.3848 10.7099 17.8153 10.5812C17.2456 10.4526 16.6499 10.5034 16.1103 10.7269C15.5706 10.9503 15.1134 11.3354 14.8014 11.8292C14.4894 12.323 14.338 12.9012 14.3679 13.4846L14.3679 13.4846L14.4349 14.7926L14.435 14.7936C14.441 14.9094 14.4227 15.0251 14.3812 15.1334C14.3396 15.2416 14.2758 15.3399 14.1939 15.422C14.1119 15.504 14.0137 15.5679 13.9055 15.6095C13.7973 15.6512 13.6817 15.6696 13.566 15.6637L13.5658 15.6637L12.2602 15.5958L12.2592 15.5958C11.6757 15.5647 11.0968 15.7151 10.6023 16.0264C10.1074 16.3379 9.72129 16.7951 9.49702 17.335C9.27275 17.875 9.22136 18.4712 9.34994 19.0416C9.47848 19.6119 9.7806 20.1283 10.2147 20.5199L10.215 20.5201L11.186 21.3962L11.1864 21.3966C11.2723 21.4743 11.3409 21.5692 11.388 21.6751C11.435 21.7811 11.4594 21.8959 11.4594 22.0119C11.4594 22.1279 11.435 22.2427 11.388 22.3487C11.3409 22.4548 11.2721 22.5498 11.186 22.6276L10.2147 23.5039L10.2143 23.5043C9.78068 23.896 9.47902 24.4123 9.35081 24.9824C9.2226 25.5525 9.27413 26.1483 9.49832 26.688C9.72251 27.2276 10.1083 27.6845 10.6028 27.9959C11.0969 28.3071 11.6751 28.4577 12.2582 28.4271L12.2595 28.427L13.565 28.3611C14.1166 28.3333 14.5412 27.8636 14.5133 27.312C14.4855 26.7604 14.0158 26.3358 13.4642 26.3637L12.1562 26.4297L12.1537 26.4298C11.9829 26.4388 11.8134 26.3948 11.6686 26.3036C11.5239 26.2124 11.4109 26.0786 11.3453 25.9206C11.2796 25.7626 11.2645 25.5882 11.3021 25.4213C11.3396 25.2545 11.4277 25.1035 11.5545 24.9889L11.5545 24.9888L11.5549 24.9885L12.5265 24.1119L12.5272 24.1112C12.8207 23.8459 13.0553 23.522 13.2159 23.1604C13.3764 22.7988 13.4594 22.4075 13.4594 22.0119C13.4594 21.6163 13.3764 21.225 13.2159 20.8634C13.0553 20.5018 12.8207 20.1779 12.5272 19.9126L12.5265 19.9119L11.5545 19.0349L11.5543 19.0347C11.4271 18.9201 11.3386 18.7688 11.301 18.6018C11.2633 18.4348 11.2784 18.2603 11.344 18.1022C11.4097 17.9441 11.5228 17.8102 11.6676 17.719C11.8125 17.6278 11.9821 17.5838 12.1531 17.593L12.1547 17.593L13.4627 17.661L13.4635 17.6611C13.8589 17.6813 14.2543 17.6183 14.6238 17.4761C14.9934 17.3339 15.329 17.1156 15.6088 16.8354C15.8887 16.5553 16.1066 16.2195 16.2484 15.8498C16.3903 15.4801 16.4529 15.0849 16.4323 14.6895L16.4322 14.6892L16.3653 13.3822L16.3653 13.3822C16.3565 13.2114 16.4009 13.0421 16.4922 12.8975C16.5836 12.7529 16.7174 12.6402 16.8754 12.5747ZM26.656 24.8887L27.7896 26.3979C27.8899 26.3703 27.9961 26.3581 28.1056 26.3637L29.4166 26.4307L29.4174 26.4307C29.5882 26.4396 29.7576 26.3953 29.9023 26.304C30.0469 26.2127 30.1597 26.0789 30.2252 25.9208C30.2907 25.7628 30.3057 25.5884 30.268 25.4215C30.2303 25.2546 30.1419 25.1035 30.0149 24.989L30.0147 24.9889L29.0427 24.1119L29.042 24.1112C28.7485 23.8459 28.5139 23.522 28.3534 23.1604C28.1928 22.7988 28.1098 22.4075 28.1098 22.0119C28.1098 21.6163 28.1928 21.225 28.3534 20.8634C28.5139 20.5018 28.7485 20.1779 29.042 19.9126L29.0427 19.9119L30.0137 19.0359L30.0143 19.0353C30.1408 18.9207 30.2287 18.7697 30.2661 18.6032C30.3035 18.4363 30.2884 18.262 30.2227 18.1041C30.1571 17.9462 30.0442 17.8125 29.8996 17.7214C29.7549 17.6302 29.5856 17.5861 29.4149 17.595L29.413 17.5951L28.1058 17.6611L28.1053 17.6611L28.105 17.6611C27.7098 17.6813 27.3147 17.6182 26.9454 17.4761C26.5758 17.3339 26.2402 17.1156 25.9604 16.8354C25.6805 16.5553 25.4626 16.2195 25.3208 15.8498C25.179 15.4804 25.1164 15.0853 25.1369 14.6902L25.1369 14.69L25.137 14.6892L25.2039 13.3822L25.2039 13.3822C25.2127 13.2114 25.1683 13.0421 25.077 12.8975C24.9857 12.7529 24.8518 12.6402 24.6938 12.5747C24.5358 12.5093 24.3614 12.4944 24.1946 12.5321C24.0278 12.5698 23.8767 12.6582 23.7622 12.7852L23.7617 12.7857L22.8839 13.7574L22.8837 13.7577C22.6186 14.0513 22.2948 14.2861 21.9333 14.4468C21.5717 14.6075 21.1803 14.6906 20.7846 14.6906C20.3889 14.6906 19.9975 14.6075 19.6359 14.4468C19.2744 14.2861 18.9506 14.0513 18.6855 13.7577L18.6853 13.7574L17.8075 12.7857L17.807 12.7852C17.6925 12.6582 17.5415 12.5698 17.3746 12.5321L20.3565 16.5019C21.4794 16.4248 22.6029 16.6524 23.6081 17.1614C24.6434 17.6856 25.5122 18.4876 26.1174 19.4777C26.7224 20.4675 27.0399 21.6061 27.0346 22.7661C27.0326 23.4948 26.903 24.2127 26.656 24.8887ZM25.0347 22.7301C25.0334 21.9506 24.8177 21.1862 24.4109 20.5208C23.9994 19.8475 23.4086 19.3021 22.7046 18.9457C22.47 18.8269 22.2259 18.7306 21.9756 18.6575L25.0347 22.7301ZM21.9753 18.6574C21.4747 18.5113 20.9492 18.458 20.4251 18.5025C19.6389 18.5692 18.8868 18.8536 18.253 19.3236C17.6192 19.7936 17.1288 20.4308 16.8367 21.1638C16.5445 21.8968 16.4622 22.6967 16.599 23.4738C16.7357 24.2509 17.0861 24.9746 17.6109 25.5639C18.1357 26.1531 18.8142 26.5846 19.5703 26.8101C19.9941 26.9364 20.2846 27.3262 20.2846 27.7684V29.2624H21.2846V27.7684C21.2846 27.3253 21.5762 26.9351 22.0011 26.8094C22.8753 26.551 23.6427 26.0172 24.1893 25.2876C24.7358 24.558 25.0323 23.6715 25.0346 22.7599L25.0346 22.7576C25.0347 22.7487 25.0347 22.7397 25.0347 22.7308L21.9753 18.6574ZM18.2846 33.2624C18.2846 32.7101 18.7323 32.2624 19.2846 32.2624H22.2846C22.8369 32.2624 23.2846 32.7101 23.2846 33.2624C23.2846 33.8147 22.8369 34.2624 22.2846 34.2624H19.2846C18.7323 34.2624 18.2846 33.8147 18.2846 33.2624Z'
      />
    </svg>
  )
}

export function Step2Icon(props: StepIconProps) {
  return (
    <svg viewBox='0 0 48 48' fill='none' xmlns='http://www.w3.org/2000/svg' {...props}>
      <linearGradient xmlns='http://www.w3.org/2000/svg' id='current' x1='0' y1='10%' x2='1' y2='100%'>
        <stop offset='5.15%' stopColor='#671bc9' />
        <stop offset='108.88%' stopColor='#fd0f9e' />
      </linearGradient>
      <linearGradient xmlns='http://www.w3.org/2000/svg' id='visited' x1='1' y1='30%' x2='0' y2='90%'>
        <stop offset='-52.99%' stopColor='#671bc9' />
        <stop offset='97.26%' stopColor='#fd0f9e' />
      </linearGradient>
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M8 11.185L20.7846 3.80385C22.641 2.73205 24.9282 2.73205 26.7846 3.80385L39.5692 11.185C41.4256 12.2568 42.5692 14.2376 42.5692 16.3812V31.1436C42.5692 33.2872 41.4256 35.2679 39.5692 36.3397L26.7846 43.7209C24.9282 44.7927 22.641 44.7927 20.7846 43.7209L8 36.3397C6.14359 35.2679 5 33.2872 5 31.1436V16.3812C5 14.2376 6.14359 12.2568 8 11.185ZM19.7846 2.0718C22.2598 0.642734 25.3094 0.642734 27.7846 2.0718L40.5692 9.45299C43.0444 10.8821 44.5692 13.5231 44.5692 16.3812V31.1436C44.5692 34.0017 43.0444 36.6427 40.5692 38.0718L27.7846 45.453C25.3094 46.8821 22.2598 46.8821 19.7846 45.453L7 38.0718C4.52479 36.6427 3 34.0017 3 31.1436V16.3812C3 13.5231 4.52479 10.8821 7 9.45299L19.7846 2.0718Z'
        fill='#6075AA'
      />
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M24.5778 12.0428C24.7653 11.8553 25.0197 11.7499 25.2849 11.7499C27.937 11.7499 30.4806 12.8035 32.3559 14.6789C34.2313 16.5542 35.2849 19.0978 35.2849 21.7499C35.2849 22.0152 35.1795 22.2695 34.992 22.457C34.8044 22.6446 34.5501 22.7499 34.2849 22.7499H25.2849C24.7326 22.7499 24.2849 22.3022 24.2849 21.7499V12.7499C24.2849 12.4847 24.3902 12.2304 24.5778 12.0428ZM26.2849 13.8127V20.7499H33.2222C33.0013 18.9969 32.2043 17.3557 30.9417 16.0931C29.6791 14.8305 28.0379 14.0335 26.2849 13.8127ZM17.7032 17.3617C19.12 16.6312 20.6908 16.2501 22.2848 16.2499C22.55 16.2499 22.8044 16.3553 22.9919 16.5428C23.1795 16.7303 23.2849 16.9847 23.2849 17.2499V25.9041L28.6322 32.7091C28.796 32.9176 28.8703 33.1827 28.8387 33.4461C28.8071 33.7094 28.6722 33.9494 28.4637 34.1133C27.2103 35.098 25.7396 35.7689 24.1744 36.07C22.6091 36.371 20.9945 36.2935 19.4653 35.844C17.936 35.3944 16.5364 34.5858 15.383 33.4855C14.2297 32.3853 13.3561 31.0253 12.835 29.5189C12.314 28.0125 12.1606 26.4034 12.3876 24.8256C12.6146 23.2479 13.2155 21.7473 14.1402 20.449C15.0648 19.1506 16.2865 18.0921 17.7032 17.3617ZM21.2849 18.3128C20.3575 18.4297 19.4551 18.7086 18.6197 19.1393C17.4863 19.7237 16.509 20.5705 15.7693 21.6092C15.0295 22.6479 14.5488 23.8483 14.3672 25.1105C14.1856 26.3727 14.3083 27.66 14.7252 28.8651C15.142 30.0702 15.8409 31.1582 16.7636 32.0384C17.6862 32.9186 18.8059 33.5655 20.0293 33.9252C21.2527 34.2848 22.5444 34.3468 23.7966 34.106C24.7196 33.9284 25.6015 33.5902 26.4029 33.1091L21.4986 26.8678C21.3601 26.6916 21.2849 26.474 21.2849 26.2499V18.3128ZM25.2849 23.7499C24.902 23.7499 24.5528 23.9685 24.3855 24.3128C24.2181 24.6571 24.262 25.0668 24.4986 25.3678L30.0596 32.4448C30.4006 32.8788 31.0289 32.9544 31.4632 32.6137C32.655 31.6785 33.6184 30.4845 34.2806 29.1219C34.9427 27.7594 35.2861 26.264 35.2849 24.7491C35.2844 24.1972 34.8368 23.7499 34.2849 23.7499H25.2849ZM30.976 30.374L27.3424 25.7499H33.2229C33.1146 26.6153 32.8648 27.4593 32.4817 28.2478C32.0986 29.0362 31.5893 29.7541 30.976 30.374Z'
        fill='#6075AA'
      />
    </svg>
  )
}

export function Step3Icon(props: StepIconProps) {
  return (
    <svg viewBox='0 0 48 48' fill='none' xmlns='http://www.w3.org/2000/svg' {...props}>
      <linearGradient xmlns='http://www.w3.org/2000/svg' id='current' x1='0' y1='10%' x2='1' y2='100%'>
        <stop offset='5.15%' stopColor='#671bc9' />
        <stop offset='108.88%' stopColor='#fd0f9e' />
      </linearGradient>
      <linearGradient xmlns='http://www.w3.org/2000/svg' id='visited' x1='1' y1='30%' x2='0' y2='90%'>
        <stop offset='-52.99%' stopColor='#671bc9' />
        <stop offset='97.26%' stopColor='#fd0f9e' />
      </linearGradient>
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M8 11.185L20.7846 3.80385C22.641 2.73205 24.9282 2.73205 26.7846 3.80385L39.5692 11.185C41.4256 12.2568 42.5692 14.2376 42.5692 16.3812V31.1436C42.5692 33.2872 41.4256 35.2679 39.5692 36.3397L26.7846 43.7209C24.9282 44.7927 22.641 44.7927 20.7846 43.7209L8 36.3397C6.14359 35.2679 5 33.2872 5 31.1436V16.3812C5 14.2376 6.14359 12.2568 8 11.185ZM19.7846 2.0718C22.2598 0.642734 25.3094 0.642734 27.7846 2.0718L40.5692 9.45299C43.0444 10.8821 44.5692 13.5231 44.5692 16.3812V31.1436C44.5692 34.0017 43.0444 36.6427 40.5692 38.0718L27.7846 45.453C25.3094 46.8821 22.2598 46.8821 19.7846 45.453L7 38.0718C4.52479 36.6427 3 34.0017 3 31.1436V16.3812C3 13.5231 4.52479 10.8821 7 9.45299L19.7846 2.0718Z'
        fill='#6075AA'
      />
      <path
        d='M23.7845 17.2509C19.7535 17.1829 15.5845 19.9999 12.9635 22.8849C12.6884 23.1903 12.5361 23.5868 12.5361 23.9979C12.5361 24.409 12.6884 24.8055 12.9635 25.1109C15.5275 27.9349 19.6845 30.8169 23.7845 30.7479C27.8845 30.8169 32.0425 27.9349 34.6085 25.1109C34.8836 24.8055 35.0359 24.409 35.0359 23.9979C35.0359 23.5868 34.8836 23.1903 34.6085 22.8849C31.9845 19.9999 27.8155 17.1829 23.7845 17.2509Z'
        stroke='#6075AA'
        strokeWidth='2'
        strokeLinecap='round'
        strokeLinejoin='round'
      />
      <path
        d='M27.5347 24C27.5345 24.7416 27.3144 25.4665 26.9022 26.0831C26.49 26.6996 25.9043 27.1801 25.219 27.4638C24.5338 27.7475 23.7798 27.8216 23.0525 27.6768C22.3251 27.532 21.657 27.1747 21.1327 26.6503C20.6083 26.1258 20.2513 25.4576 20.1067 24.7302C19.962 24.0028 20.0364 23.2488 20.3202 22.5637C20.6041 21.8785 21.0847 21.2929 21.7014 20.8809C22.318 20.4689 23.043 20.249 23.7847 20.249C24.2772 20.2488 24.765 20.3458 25.2201 20.5342C25.6752 20.7227 26.0887 20.999 26.437 21.3474C26.7852 21.6957 27.0614 22.1093 27.2498 22.5644C27.4381 23.0196 27.5349 23.5074 27.5347 24Z'
        stroke='#6075AA'
        strokeWidth='2'
        strokeLinecap='round'
        strokeLinejoin='round'
      />
    </svg>
  )
}

export function Step4Icon(props: StepIconProps) {
  return (
    <svg viewBox='0 0 48 48' fill='none' xmlns='http://www.w3.org/2000/svg' {...props}>
      <linearGradient xmlns='http://www.w3.org/2000/svg' id='current' x1='0' y1='10%' x2='1' y2='100%'>
        <stop offset='5.15%' stopColor='#671bc9' />
        <stop offset='108.88%' stopColor='#fd0f9e' />
      </linearGradient>
      <linearGradient xmlns='http://www.w3.org/2000/svg' id='visited' x1='1' y1='30%' x2='0' y2='90%'>
        <stop offset='-52.99%' stopColor='#671bc9' />
        <stop offset='97.26%' stopColor='#fd0f9e' />
      </linearGradient>
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M8 11.185L20.7846 3.80385C22.641 2.73205 24.9282 2.73205 26.7846 3.80385L39.5692 11.185C41.4256 12.2568 42.5692 14.2376 42.5692 16.3812V31.1436C42.5692 33.2872 41.4256 35.2679 39.5692 36.3397L26.7846 43.7209C24.9282 44.7927 22.641 44.7927 20.7846 43.7209L8 36.3397C6.14359 35.2679 5 33.2872 5 31.1436V16.3812C5 14.2376 6.14359 12.2568 8 11.185ZM19.7846 2.0718C22.2598 0.642734 25.3094 0.642734 27.7846 2.0718L40.5692 9.45299C43.0444 10.8821 44.5692 13.5231 44.5692 16.3812V31.1436C44.5692 34.0017 43.0444 36.6427 40.5692 38.0718L27.7846 45.453C25.3094 46.8821 22.2598 46.8821 19.7846 45.453L7 38.0718C4.52479 36.6427 3 34.0017 3 31.1436V16.3812C3 13.5231 4.52479 10.8821 7 9.45299L19.7846 2.0718Z'
        fill='#6075AA'
      />
      <g clipPath='url(#clip0_63_483)'>
        <path
          d='M14.7847 17.2499C16.0273 17.2499 17.0347 16.2426 17.0347 14.9999C17.0347 13.7573 16.0273 12.7499 14.7847 12.7499C13.542 12.7499 12.5347 13.7573 12.5347 14.9999C12.5347 16.2426 13.542 17.2499 14.7847 17.2499Z'
          stroke='#6075AA'
          strokeWidth='2'
          strokeLinecap='round'
          strokeLinejoin='round'
        />
        <path
          d='M14.7847 26.2499C16.0273 26.2499 17.0347 25.2426 17.0347 23.9999C17.0347 22.7573 16.0273 21.7499 14.7847 21.7499C13.542 21.7499 12.5347 22.7573 12.5347 23.9999C12.5347 25.2426 13.542 26.2499 14.7847 26.2499Z'
          stroke='#6075AA'
          strokeWidth='2'
          strokeLinecap='round'
          strokeLinejoin='round'
        />
        <path
          d='M14.7847 35.2499C16.0273 35.2499 17.0347 34.2426 17.0347 32.9999C17.0347 31.7573 16.0273 30.7499 14.7847 30.7499C13.542 30.7499 12.5347 31.7573 12.5347 32.9999C12.5347 34.2426 13.542 35.2499 14.7847 35.2499Z'
          stroke='#6075AA'
          strokeWidth='2'
          strokeLinecap='round'
          strokeLinejoin='round'
        />
        <path
          d='M20.0347 14.9999H35.0347'
          stroke='#6075AA'
          strokeWidth='2'
          strokeLinecap='round'
          strokeLinejoin='round'
        />
        <path
          d='M20.0347 23.9999H35.0347'
          stroke='#6075AA'
          strokeWidth='2'
          strokeLinecap='round'
          strokeLinejoin='round'
        />
        <path
          d='M20.0347 32.9999H35.0347'
          stroke='#6075AA'
          strokeWidth='2'
          strokeLinecap='round'
          strokeLinejoin='round'
        />
      </g>
      <defs>
        <clipPath id='clip0_63_483'>
          <rect width='24' height='24' fill='white' transform='translate(11.7847 11.9999)' />
        </clipPath>
      </defs>
    </svg>
  )
}

type UseStepIconResult = { [k: string]: string }

export function useStepIcon(currentStepIdx: number, activeStepIdx: number): UseStepIconResult {
  function getStepState(currentStepIdx: number, activeStepIdx: number): StepState {
    if (currentStepIdx < activeStepIdx) {
      return StepState.Visited
    }

    if (currentStepIdx > activeStepIdx) {
      return StepState.ToBeVisited
    }

    return StepState.Current
  }

  switch (getStepState(currentStepIdx, activeStepIdx)) {
    case StepState.ToBeVisited: {
      return { fill: 'none', fillRule: 'nonzero', stroke: '#6075AA' }
    }
    case StepState.Current: {
      return { fill: 'none', fillRule: 'nonzero', stroke: 'url(#current)' }
    }
    case StepState.Visited: {
      return { fill: 'url(#visited)', fillRule: 'nonzero', stroke: 'black' }
    }
  }
}
